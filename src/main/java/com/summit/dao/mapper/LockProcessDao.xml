<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.summit.dao.repository.LockProcessDao">
  <resultMap id="BaseResultMap" type="com.summit.dao.entity.LockProcess">
    <result column="process_id" jdbcType="VARCHAR" property="processId" />
    <result column="device_ip" jdbcType="VARCHAR" property="deviceIp" />
    <result column="lock_id" jdbcType="VARCHAR" property="lockId" />
    <result column="lock_code" jdbcType="VARCHAR" property="lockCode" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="card_type" jdbcType="INTEGER" property="cardType" />
    <result column="card_id" jdbcType="VARCHAR" property="cardId" />
    <result column="face_match_rate" jdbcType="REAL" property="faceMatchRate" />
    <result column="face_lib_name" jdbcType="VARCHAR" property="faceLibName" />
    <result column="face_lib_type" jdbcType="INTEGER" property="faceLibType" />

    <result column="process_type" jdbcType="INTEGER" property="processType" />
    <result column="process_result" jdbcType="VARCHAR" property="processResult" />
    <result column="fail_reason" jdbcType="VARCHAR" property="failReason" />
    <result column="face_panorama_id" jdbcType="VARCHAR" property="facePanoramaId" />
    <result column="face_pic_id" jdbcType="VARCHAR" property="facePicId" />
    <result column="face_match_id" jdbcType="VARCHAR" property="faceMatchId" />
    <result column="process_time" jdbcType="TIMESTAMP" property="processTime" />

    <association property="lockInfo" javaType="com.summit.dao.entity.LockInfo">
      <result column="li_lock_id" jdbcType="VARCHAR" property="lockId" />
      <result column="li_lock_code" jdbcType="VARCHAR" property="lockCode" />
      <result column="li_status" jdbcType="INTEGER" property="status" />
      <result column="li_createby" jdbcType="VARCHAR" property="createby" />
      <result column="li_updatetime" jdbcType="TIMESTAMP" property="updatetime" />

      <collection property="devices" resultMap="devicesResult"  />
      <collection property="roles" resultMap="rolesResult"  />
    </association>

    <association property="facePanorama" javaType="com.summit.dao.entity.FileInfo">
      <result column="fi1_id" jdbcType="VARCHAR" property="fileId" />
      <result column="fi1_name" jdbcType="VARCHAR" property="filenName" />
      <result column="fi1_path" jdbcType="LONGVARCHAR" property="filePath" />
      <result column="fi1_des" jdbcType="LONGVARCHAR" property="description" />
    </association>
    <association property="facePic" javaType="com.summit.dao.entity.FileInfo">
      <result column="fi2_id" jdbcType="VARCHAR" property="fileId" />
      <result column="fi2_name" jdbcType="VARCHAR" property="filenName" />
      <result column="fi2_path" jdbcType="LONGVARCHAR" property="filePath" />
      <result column="fi2_des" jdbcType="LONGVARCHAR" property="description" />
    </association>
    <association property="faceMatch" javaType="com.summit.dao.entity.FileInfo">
      <result column="fi3_id" jdbcType="VARCHAR" property="fileId" />
      <result column="fi3_name" jdbcType="VARCHAR" property="filenName" />
      <result column="fi3_path" jdbcType="LONGVARCHAR" property="filePath" />
      <result column="fi3_des" jdbcType="LONGVARCHAR" property="description" />
    </association>

  </resultMap>

  <resultMap id="devicesResult" type="com.summit.dao.entity.CameraDevice">
    <result column="cd_dev_id" jdbcType="VARCHAR" property="devId" />
    <result column="cd_device_ip" jdbcType="VARCHAR" property="deviceIp" />
    <result column="cd_lock_id" jdbcType="VARCHAR" property="lockId" />
    <result column="cd_lock_code" jdbcType="VARCHAR" property="lockCode" />
    <result column="cd_status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <resultMap id="rolesResult" type="com.summit.dao.entity.LockRole">
    <result column="au_id" jdbcType="VARCHAR" property="id" />
    <result column="au_role_id" jdbcType="VARCHAR" property="roleCode" />
    <result column="au_lock_id" jdbcType="VARCHAR" property="lockId" />
    <result column="au_lock_code" jdbcType="VARCHAR" property="lockCode" />
  </resultMap>


  <sql id="Base_Column_List">
    process_id, device_ip, lock_id,lock_code, user_id, user_name, gender, birthday, province, city, card_type, card_id,
    face_match_rate, face_lib_name, face_lib_type,process_type, process_result,fail_reason,
    face_panorama_id, face_pic_id, face_match_id, process_time
  </sql>
  <sql id="Lock_Have_Alias_List">
    lo.process_id, lo.device_ip, lo.lock_id, lo.lock_code, lo.user_id, lo.user_name, lo.gender, lo.birthday,
    lo.province, lo.city, lo.card_type, lo.card_id,lo.face_match_rate, lo.face_lib_name, lo.face_lib_type,
    lo.process_type, lo.process_result,lo.fail_reason, lo.face_panorama_id, lo.face_pic_id, lo.face_match_id,
    lo.process_time
  </sql>
  <sql id="LockInfo_Have_Alias_List">
    li.lock_id li_lock_id, li.lock_code li_lock_code, li.status li_status,
    li.createby li_createby, li.updatetime li_updatetime
  </sql>
  <sql id="Auth_Have_Alias_List">
    au.id au_id, au.role_id au_role_id, au.lock_id au_lock_id, au.lock_code au_lock_code
  </sql>
  <sql id="Device_Have_Alias_List">
    cd.dev_id cd_dev_id, cd.device_ip cd_device_ip, cd.lock_id cd_lock_id, cd.lock_code cd_lock_code, cd.status cd_status
  </sql>
  <sql id="Auth_No_Alias_List">
    au.id , au.role_id , au.lock_id , au.lock_code
  </sql>


  <select id="selectLockProcessById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Lock_Have_Alias_List" />,
    <include refid="LockInfo_Have_Alias_List" />,
    <include refid="Device_Have_Alias_List" />,
    <include refid="Auth_Have_Alias_List" />,
    fi1.file_id fi1_id, fi1.file_name fi1_name, fi1.file_path fi1_path, fi1.description fi1_des,
    fi2.file_id fi2_id, fi2.file_name fi2_name, fi2.file_path fi2_path, fi2.description fi2_des,
    fi3.file_id fi3_id, fi3.file_name fi3_name, fi3.file_path fi3_path, fi3.description fi3_des
    from (
    select <include refid="Lock_Have_Alias_List" /> from lock_process lo
    inner join (
    select <include refid="Auth_No_Alias_List" /> from role_lock_auth au
    <where>
      au.role_id in
      <foreach  item="role" collection="roles" index="index"  open="(" separator="," close=")">
        #{role}
      </foreach>
    </where>
    ) au on (lo.lock_id = au.lock_id or lo.lock_code = au.lock_code)
    ) lo
    left join file_info fi1 on lo.face_panorama_id=fi1.file_id
    left join file_info fi2 on lo.face_pic_id=fi2.file_id
    left join file_info fi3 on lo.face_match_id=fi3.file_id
    left join lock_info li on li.lock_code = lo.lock_code
    left join camera_device cd on li.lock_code = cd.lock_code
    left join role_lock_auth au on (li.lock_id = au.lock_id and li.lock_code = au.lock_code)
    <where>
      lo.process_id=#{processId}
    </where>
  </select>

  <select id="selectByLockCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Lock_Have_Alias_List" />,
    <include refid="LockInfo_Have_Alias_List" />,
    <include refid="Device_Have_Alias_List" />,
    <include refid="Auth_Have_Alias_List" />,
    fi1.file_id fi1_id, fi1.file_name fi1_name, fi1.file_path fi1_path, fi1.description fi1_des,
    fi2.file_id fi2_id, fi2.file_name fi2_name, fi2.file_path fi2_path, fi2.description fi2_des,
    fi3.file_id fi3_id, fi3.file_name fi3_name, fi3.file_path fi3_path, fi3.description fi3_des
    from (
      select <include refid="Lock_Have_Alias_List" /> from lock_process lo
      inner join (
      select <include refid="Auth_No_Alias_List" /> from role_lock_auth au
      <where>
        au.role_id in
        <foreach  item="role" collection="roles" index="index"  open="(" separator="," close=")">
          #{role}
        </foreach>
      </where>
    ) au on (lo.lock_id = au.lock_id or lo.lock_code = au.lock_code)
    <if test="page != null and page.current != null and  page.pageSize != null ">
      limit #{page.current},#{page.pageSize}
    </if>
    ) lo
    left join file_info fi1 on lo.face_panorama_id=fi1.file_id
    left join file_info fi2 on lo.face_pic_id=fi2.file_id
    left join file_info fi3 on lo.face_match_id=fi3.file_id
    left join lock_info li on li.lock_code = lo.lock_code
    left join camera_device cd on li.lock_code = cd.lock_code
    left join role_lock_auth au on (li.lock_id = au.lock_id and li.lock_code = au.lock_code)
    <where>
      lo.lock_code=#{lockCode}
    </where>
    order by process_time desc
  </select>

  <select id="selectCondition"  resultMap="BaseResultMap">
    select
    <include refid="Lock_Have_Alias_List" />,
    <include refid="LockInfo_Have_Alias_List" />,
    <include refid="Device_Have_Alias_List" />,
    <include refid="Auth_Have_Alias_List" />,
    fi1.file_id fi1_id, fi1.file_name fi1_name, fi1.file_path fi1_path, fi1.description fi1_des,
    fi2.file_id fi2_id, fi2.file_name fi2_name, fi2.file_path fi2_path, fi2.description fi2_des,
    fi3.file_id fi3_id, fi3.file_name fi3_name, fi3.file_path fi3_path, fi3.description fi3_des
    from (
    select <include refid="Lock_Have_Alias_List" /> from lock_process lo
    inner join (
    select <include refid="Auth_No_Alias_List" /> from role_lock_auth au
    <where>
      au.role_id in
      <foreach  item="role" collection="roles" index="index"  open="(" separator="," close=")">
        #{role}
      </foreach>
    </where>
    ) au on (lo.lock_id = au.lock_id or lo.lock_code = au.lock_code)
    <if test="page != null and page.current != null and  page.pageSize != null ">
      limit #{page.current},#{page.pageSize}
    </if>
    ) lo
    left join file_info fi1 on lo.face_panorama_id=fi1.file_id
    left join file_info fi2 on lo.face_pic_id=fi2.file_id
    left join file_info fi3 on lo.face_match_id=fi3.file_id
    left join lock_info li on li.lock_code = lo.lock_code
    left join camera_device cd on li.lock_code = cd.lock_code
    left join role_lock_auth au on (li.lock_id = au.lock_id and li.lock_code = au.lock_code)
    <where>
      <if test="lockProcess.processId != null">
        lo.process_id = #{lockProcess.processId}
      </if>
      <if test="lockProcess.deviceIp != null">
        and lo.device_ip = #{lockProcess.deviceIp}
      </if>
      <if test="lockProcess.lockId != null">
        and lo.lock_cd = #{lockProcess.lockId}
      </if>
      <if test="lockProcess.lockCode != null">
        and lo.lock_code = #{lockProcess.lockCode}
      </if>
      <if test="lockProcess.userId != null">
        and lo.user_id = #{lockProcess.userId}
      </if>
      <if test="lockProcess.userName != null">
        and lo.user_name = #{lockProcess.userName}
      </if>
      <if test="lockProcess.gender != null">
        and lo.gender = #{lockProcess.gender}
      </if>
      <if test="lockProcess.birthday != null">
        and lo.birthday = #{lockProcess.birthday}
      </if>
      <if test="lockProcess.province != null">
        and lo.province = #{lockProcess.province}
      </if>
      <if test="lockProcess.city != null">
        and lo.city = #{lockProcess.city}
      </if>
      <if test="lockProcess.cardType != null">
        and lo.card_type = #{lockProcess.cardType}
      </if>
      <if test="lockProcess.cardId != null">
        and lo.card_id = #{lockProcess.cardId}
      </if>
      <if test="lockProcess.faceMatchRate != null">
        and lo.face_match_rate = #{lockProcess.faceMatchRate}
      </if>
      <if test="lockProcess.faceLibName != null">
        and lo.face_lib_name = #{lockProcess.faceLibName}
      </if>
      <if test="lockProcess.faceLibType != null">
        and lo.face_lib_type = #{lockProcess.faceLibType}
      </if>
      <if test="lockProcess.processType != null">
        and lo.process_type = #{lockProcess.processType}
      </if>
      <if test="lockProcess.processResult != null">
        and lo.process_result = #{lockProcess.processResult}
      </if>
      <if test="lockProcess.failReason != null">
        and lo.fail_reason = #{lockProcess.failReason}
      </if>
      <if test="start != null">
        and lo.process_time &gt;= #{start}
      </if>
      <if test="end != null">
        and lo.process_time &lt;= #{end}
      </if>
    </where>
    order by process_time desc
  </select>

  <insert id="insertRecord" parameterType="com.summit.dao.entity.LockProcess">
    insert into lock_process
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="processId != null">
          process_id,
        </if>
        <if test="deviceIp != null">
          device_ip,
        </if>
        <if test="lockId != null">
          lock_id,
        </if>
        <if test="lockCode != null">
          lock_code,
        </if>
        <if test="userId != null">
          user_id,
        </if>
        <if test="userName != null">
          user_name,
        </if>
        <if test="gender != null">
          gender,
        </if>
        <if test="birthday != null">
          birthday,
        </if>
        <if test="province != null">
          province,
        </if>
        <if test="city != null">
          city,
        </if>
        <if test="cardType != null">
          and lo.card_type = #{lockProcess.cardType}
        </if>
        <if test="cardId != null">
          card_id,
        </if>
        <if test="faceMatchRate != null">
          face_match_rate,
        </if>
        <if test="faceLibName != null">
          face_lib_name,
        </if>
        <if test="faceLibType != null">
          face_lib_type,
        </if>
        <if test="processType != null">
          process_type,
        </if>
        <if test="processResult != null">
          process_result,
        </if>
        <if test="failReason != null">
          fail_reason,
        </if>
        <if test="facePanorama != null and facePanorama.fileId != null">
          face_panorama_id,
        </if>
        <if test="facePic != null and facePic.fileId != null">
          face_pic_id,
        </if>
        <if test="faceMatch != null and faceMatch.fileId != null">
          face_match_id,
        </if>
        <if test="processTime != null">
          process_time,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="processId != null">
          #{processId},
        </if>
        <if test="deviceIp != null">
          #{deviceIp},
        </if>
        <if test="lockId != null">
          #{lockId},
        </if>
        <if test="lockCode != null">
          #{lockCode},
        </if>
        <if test="userId != null">
          #{userId},
        </if>
        <if test="userName != null">
          #{userName},
        </if>
        <if test="gender != null">
          #{gender},
        </if>
        <if test="birthday != null">
          #{birthday},
        </if>
        <if test="province != null">
          #{province},
        </if>
        <if test="city != null">
          #{city},
        </if>
        <if test="cardType != null">
          #{cardType},
        </if>
        <if test="cardId != null">
          #{cardId},
        </if>
        <if test="faceMatchRate != null">
          #{faceMatchRate},
        </if>
        <if test="faceLibName != null">
          #{faceLibName},
        </if>
        <if test="faceLibType != null">
          #{faceLibType},
        </if>
        <if test="processType != null">
          #{processType},
        </if>
        <if test="processResult != null">
          #{processResult},
        </if>
        <if test="failReason != null">
          #{failReason},
        </if>
        <if test="facePanorama != null and facePanorama.fileId != null">
          #{facePanorama.fileId},
        </if>
        <if test="facePic != null and facePic.fileId != null">
          #{facePic.fileId},
        </if>
        <if test="faceMatch != null and faceMatch.fileId != null">
          #{faceMatch.fileId},
        </if>
        <if test="processTime != null">
          #{processTime},
        </if>
      </trim>
  </insert>

    <update id="updateRecord" parameterType="com.summit.dao.entity.LockProcess">
      update lock_process
      <set>
        <if test="processId != null">
          process_id = #{processId},
        </if>
        <if test="deviceIp != null">
          device_ip = #{deviceIp},
        </if>
        <if test="lockId != null">
          lock_id = #{lockId},
        </if>
        <if test="lockCode != null">
          lock_code = #{lockCode},
        </if>
        <if test="userId != null">
          user_id = #{userId},
        </if>
        <if test="userName != null">
          user_name = #{userName},
        </if>
        <if test="gender != null">
          gender = #{gender},
        </if>
        <if test="birthday != null">
          birthday = #{birthday},
        </if>
        <if test="province != null">
          province = #{province},
        </if>
        <if test="city != null">
          city = #{city},
        </if>
        <if test="cardType != null">
          card_type = #{cardType},
        </if>
        <if test="cardId != null">
          card_id = #{cardId},
        </if>
        <if test="faceMatchRate != null">
          face_match_rate = #{faceMatchRate},
        </if>
        <if test="faceLibName != null">
          face_lib_name = #{faceLibName},
        </if>
        <if test="faceLibType != null">
          face_lib_type = #{faceLibType},
        </if>
        <if test="processType != null">
          process_type = #{processType},
        </if>
        <if test="processResult != null">
          process_result = #{processResult},
        </if>
        <if test="failReason != null">
          fail_reason = #{failReason},
        </if>
        <if test="facePanorama != null and facePanorama.fileId != null">
          face_panorama_id = #{facePanorama.fileId},
        </if>
        <if test="facePic != null and facePic.fileId != null">
          face_pic_id = #{facePic.fileId},
        </if>
        <if test="faceMatch != null and faceMatch.fileId != null">
          face_match_id = #{faceMatch.fileId},
        </if>
        <if test="processTime != null">
          process_time = #{processTime}
        </if>
      </set>
      <where>
        process_id = #{processId}
      </where>
    </update>

</mapper>