<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.summit.dao.repository.FaceInfoManagerDao">
   <resultMap id="facemanager" type="com.summit.dao.entity.FaceInfo">
       <result column="face_id"  jdbcType="VARCHAR" property="faceid"/>
       <result column="user_name" jdbcType="VARCHAR" property="userName"/>
       <result column="user_id"  jdbcType="VARCHAR" property="userID"/>
       <result column="gender"  jdbcType="INTEGER" property="gender"/>
       <result column="province"  jdbcType="VARCHAR" property="province"/>
       <result column="city"  jdbcType="VARCHAR" property="city"/>
       <result column="card_type" jdbcType="INTEGER"  property="cardType"/>
       <result column="card_id"  jdbcType="VARCHAR" property="cardId"/>
       <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
       <result column="face_image" jdbcType="VARCHAR" property="faceImage"/>
       <result column="face_type" jdbcType="VARCHAR" property="faceType"/>
       <result column="face_startTime" jdbcType="TIMESTAMP" property="faceStartTime"/>
       <result column="face_endTime" jdbcType="TIMESTAMP" property="faceEndTime"/>
       <result column="is_valid_time" jdbcType="INTEGER" property="isValidTime"/>
       <result column="deptNames" jdbcType="VARCHAR" property="deptNames"/>
       <result column="depts" jdbcType="VARCHAR" property="deptId"/>
   </resultMap>
    <insert id="insertFaceInfo" parameterType="com.summit.dao.entity.FaceInfo">
        INSERT INTO face_info
        (face_id,face_name,user_name,user_id,gender,birthday,province,city,card_type,
        card_id,face_match_rate,face_lib_name,face_lib_type,device_ip,pic_snapshot_time,face_lib_id,face_image,face_type,face_startTime,face_endTime,is_valid_time)
        VALUES (#{faceid},#{faceName},#{userName},#{userID},#{gender},#{birthday},#{province},#{city},#{cardType},
                #{cardId},#{faceMatchrate},#{facelibname},#{facelibtype},
                #{deviceip},#{picsnapshottime},#{facelibid},#{faceImage},#{faceType},#{faceStartTime},#{faceEndTime},#{isValidTime}
        )
    </insert>
    <sql id="faceInfoCloum">
      faceInfo.face_id,faceInfo.user_name,faceInfo.gender,faceInfo.birthday,faceInfo.province,faceInfo.city,faceInfo.card_type,faceInfo.card_id,faceInfo.face_image,faceInfo.face_type,faceInfo.face_startTime,faceInfo.face_endTime,faceInfo.is_valid_time,deptFace.deptNames,deptFace.depts
    </sql>
    <select id="selectFaceInfoByPage" parameterType="com.summit.entity.FaceInfoManagerEntity" resultMap="facemanager">
        SELECT
        <include refid="faceInfoCloum"/>
        FROM  face_info faceInfo
        LEFT JOIN(
            SELECT deptFace.face_id,GROUP_CONCAT(deptFace.dept_id)AS depts, GROUP_CONCAT(dept.DEPTNAME)AS deptNames
            FROM dept_face_auth deptFace
            inner join cbb_userauth.sys_dept dept on deptFace.dept_id=dept.ID
            <where>
                deptFace.dept_id IN
                <foreach item="dept" collection="depts" index="index" open="(" separator="," close=")">
                    #{dept}
                </foreach>
            </where>
            GROUP BY face_id
        )deptFace on faceInfo.face_id=deptFace.face_id
        <where>
            <if test="depts != null">
                faceInfo.face_id IN ( SELECT DISTINCT dfu.face_id FROM dept_face_auth dfu WHERE dfu.dept_id IN
                <foreach item="dept" collection="depts" index="index" open="(" separator="," close=")">
                    #{dept}
                </foreach>
                )
            </if>
            <if test="faceInfoManagerEntity.pubquery !=null and faceInfoManagerEntity.pubquery !=''">
                AND concat(faceInfo.user_name,faceInfo.card_id,faceInfo.province,faceInfo.city) like concat('%',#{faceInfoManagerEntity.pubquery}, '%')
            </if>
            <if test="faceInfoManagerEntity.gender !=null">
                AND faceInfo.gender=#{faceInfoManagerEntity.gender}
            </if>
            <if test="faceInfoManagerEntity.cardType !=null">
                AND faceInfo.card_type=#{faceInfoManagerEntity.cardType}
            </if>
            <if test="faceInfoManagerEntity.faceType !=null">
                AND faceInfo.face_type=#{faceInfoManagerEntity.faceType}
            </if>
            <if test="faceInfoManagerEntity.faceEndTime !=null">
                AND faceInfo.face_endTime=#{faceInfoManagerEntity.faceEndTime}
            </if>
            <if test="faceInfoManagerEntity.isValidTime !=null">
                AND faceInfo.is_valid_time=#{faceInfoManagerEntity.isValidTime}
            </if>
        </where>
        ORDER BY face_startTime DESC
    </select>
    <select id="selectFaceInfoByID" parameterType="java.lang.String" resultMap="facemanager">
        SELECT
        <include refid="faceInfoCloum"/>
        FROM  face_info faceInfo
        LEFT JOIN(
            SELECT deptFace.face_id,GROUP_CONCAT(deptFace.dept_id)AS depts, GROUP_CONCAT(dept.DEPTNAME)AS deptNames
            FROM dept_face_auth deptFace
            inner join cbb_userauth.sys_dept dept on deptFace.dept_id=dept.ID
            <where>
                deptFace.dept_id IN
                <foreach item="dept" collection="depts" index="index" open="(" separator="," close=")">
                    #{dept}
                </foreach>
            </where>
            GROUP BY face_id
            )deptFace on faceInfo.face_id=deptFace.face_id
        <where>
            faceInfo.face_id=#{faceid}
        </where>
    </select>
    <select id="selectFaceIdByUserName" resultType="java.lang.String" >
        SELECT
        face_id
        FROM  face_info
        <where>
           user_name=#{userName}
        </where>
    </select>
    <select id="selectAllFaceInfo" resultMap="facemanager" >
        SELECT
        <include refid="faceInfoCloum"/>
        FROM  face_info faceInfo
        LEFT JOIN
        (SELECT deptFace.face_id,GROUP_CONCAT(deptFace.dept_id)AS depts, GROUP_CONCAT(dept.DEPTNAME)AS deptNames  FROM dept_face_auth deptFace  inner join cbb_userauth.sys_dept dept on deptFace.dept_id=dept.ID  GROUP BY face_id)deptFace
        on faceInfo.face_id=deptFace.face_id
        ORDER BY faceInfo.face_startTime  DESC
    </select>
    <select id="faceInfoExport" resultMap="facemanager">
        SELECT
        faceInfo.face_id,faceInfo.user_name,faceInfo.gender,faceInfo.birthday,faceInfo.province,faceInfo.city,faceInfo.card_type,faceInfo.card_id,faceInfo.face_image,faceInfo.face_type,faceInfo.face_startTime,faceInfo.face_endTime,faceInfo.is_valid_time,deptFace.deptNames
        from face_info  faceInfo
        LEFT JOIN
        (SELECT deptFace.face_id,GROUP_CONCAT(deptFace.dept_id)AS depts, GROUP_CONCAT(dept.DEPTNAME)AS deptNames  FROM dept_face_auth deptFace  inner join cbb_userauth.sys_dept dept on deptFace.dept_id=dept.ID  GROUP BY face_id)deptFace
        on faceInfo.face_id=deptFace.face_id
        LIMIT 0,2
    </select>
    <insert id="insertFaceInfos"  parameterType="java.util.List">
        INSERT INTO face_info (
        <trim suffix="" suffixOverrides=",">
            face_id ,
            user_name ,
            gender,
            birthday ,
            province ,
            city,
            card_type,
            card_id,
            face_match_rate,
            face_image,
            face_type,
            face_startTime,
            face_endTime,
            is_valid_time
        </trim>
        ) VALUES
        <foreach collection="faceInfos" item="item" index="index" separator=",">
            (
            #{item.faceid} ,
            #{item.userName} ,
            #{item.gender} ,
            #{item.birthday} ,
            #{item.province} ,
            #{item.city} ,
            #{item.cardType},
            #{item.cardId},
            #{item.faceMatchrate},
            #{item.faceImage},
            #{item.faceType},
            #{item.faceStartTime},
            #{item.faceEndTime},
            #{item.isValidTime}
            )
        </foreach>
    </insert>
    <select id="selectAllFaceByDeptId" resultMap="facemanager">
        SELECT  faceInfo.face_id,faceInfo.user_name,faceInfo.face_image,faceInfo.is_valid_time  FROM  face_info faceInfo
        <where>
            <if test="depts != null">
                face_id IN ( SELECT DISTINCT deptFace.face_id FROM dept_face_auth deptFace WHERE deptFace.dept_id IN
                <foreach item="dept" collection="depts" index="index" open="(" separator="," close=")">
                    #{dept}
                </foreach>
                )
            </if>
        </where>
    </select>
</mapper>