<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.summit.dao.repository.AccessControlDao">
    <resultMap id="BaseResultMap" type="com.summit.dao.entity.AccessControlInfo">
        <result column="access_control_id" jdbcType="VARCHAR" property="accessControlId"/>
        <result column="access_control_name" jdbcType="VARCHAR" property="accessControlName"/>
        <result column="lock_id" jdbcType="VARCHAR" property="lockId"/>
        <result column="lock_code" jdbcType="VARCHAR" property="lockCode"/>
        <result column="entry_camera_id" jdbcType="VARCHAR" property="entryCameraId"/>
        <result column="entry_camera_ip" jdbcType="VARCHAR" property="entryCameraIp"/>
        <result column="exit_camera_id" jdbcType="VARCHAR" property="exitCameraId"/>
        <result column="exit_camera_ip" jdbcType="VARCHAR" property="exitCameraIp"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="createby" jdbcType="VARCHAR" property="createby"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime"/>
        <result column="longitude" jdbcType="VARCHAR" property="longitude"/>
        <result column="latitude" jdbcType="VARCHAR" property="latitude"/>

        <collection property="roles" resultMap="rolesResult"/>
    </resultMap>

    <resultMap id="rolesResult" type="com.summit.dao.entity.AccCtrlRole">
        <result column="au_id" jdbcType="VARCHAR" property="id"/>
        <result column="au_role_id" jdbcType="VARCHAR" property="roleCode"/>
        <result column="au_access_control_id" jdbcType="VARCHAR" property="accessControlId"/>
    </resultMap>

    <sql id="Base_Column_List">
        access_control_id, access_control_name, lock_id, lock_code, entry_camera_id, entry_camera_ip,
    exit_camera_id, exit_camera_ip, status, createby, createtime, updatetime, longitude, latitude
    </sql>
    <sql id="AccCtrl_Have_Alias_List">
        ac.access_control_id, ac.access_control_name, ac.lock_id, ac.lock_code, ac.entry_camera_id,
    ac.entry_camera_ip, ac.exit_camera_id, ac.exit_camera_ip, ac.status, ac.createby, ac.createtime, ac.updatetime,
    ac.longitude, ac.latitude
    </sql>
    <sql id="Auth_Have_Alias_List">
        au.id au_id, au.role_id au_role_id, au.access_control_id au_access_control_id
    </sql>
    <sql id="Auth_No_Alias_List">
        au.id, au.role_id, au.access_control_id
    </sql>

    <select id="selectAccCtrlById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="AccCtrl_Have_Alias_List"/>,
        <include refid="Auth_Have_Alias_List"/>
        from
        (select distinct
        <include refid="AccCtrl_Have_Alias_List"/>
        from access_control ac
        <if test="roles != null">
            inner join (
            select
            <include refid="Auth_No_Alias_List"/>
            from role_accesscontrol_auth au
            <where>
                au.role_id in
                <foreach item="role" collection="roles" index="index" open="(" separator="," close=")">
                    #{role}
                </foreach>
            </where>
            ) au on ac.access_control_id = au.access_control_id
        </if>
        <where>
            ac.access_control_id=#{accessControlId}
        </where>
        ) ac
        left join role_accesscontrol_auth au on ac.access_control_id = au.access_control_id

    </select>

    <select id="selectAccCtrlByLockCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="AccCtrl_Have_Alias_List"/>,
        <include refid="Auth_Have_Alias_List"/>
        from
        (select distinct
        <include refid="AccCtrl_Have_Alias_List"/>
        from access_control ac
        <if test="roles != null">
            inner join (
            select
            <include refid="Auth_No_Alias_List"/>
            from role_accesscontrol_auth au
            <where>
                au.role_id in
                <foreach item="role" collection="roles" index="index" open="(" separator="," close=")">
                    #{role}
                </foreach>
            </where>
            ) au on ac.access_control_id = au.access_control_id
        </if>
        <where>
            ac.lock_code=#{lockCode}
        </where>
        ) ac
        left join role_accesscontrol_auth au on ac.access_control_id = au.access_control_id

    </select>

    <select id="selectAllAccessControlIds" parameterType="java.lang.String" resultType="java.lang.String">
        select ac.access_control_id
        from access_control ac
        <if test="roles != null">
            inner join (
            select distinct ac.access_control_id from role_accesscontrol_auth au
            <where>
                au.role_id in
                <foreach item="role" collection="roles" index="index" open="(" separator="," close=")">
                    #{role}
                </foreach>
            </where>
            ) au on ac.access_control_id = au.access_control_id
        </if>

    </select>

    <select id="selectAllLockCodes" parameterType="java.lang.String" resultType="java.lang.String">
        select ac.lock_code
        from access_control ac
        <if test="roles != null">
            inner join (
            select distinct ac.lock_code from role_accesscontrol_auth au
            <where>
                au.role_id in
                <foreach item="role" collection="roles" index="index" open="(" separator="," close=")">
                    #{role}
                </foreach>
            </where>
            ) au on ac.access_control_id = au.access_control_id
        </if>

    </select>

    <select id="selectStatusLockCode" resultType="java.lang.Integer">
        select ac.status
        from access_control ac
        <if test="roles != null">
            inner join (
            select distinct ac.access_control_id from role_accesscontrol_auth au
            <where>
                au.role_id in
                <foreach item="role" collection="roles" index="index" open="(" separator="," close=")">
                    #{role}
                </foreach>
            </where>
            ) au on ac.access_control_id = au.access_control_id
        </if>
        <where>
            ac.lock_code=#{lockCode}
        </where>

    </select>

    <select id="selectAccCtrlInfosByUserName" resultMap="BaseResultMap">
        select
        <include refid="AccCtrl_Have_Alias_List"/>
        from access_control ac
        inner JOIN dept_accesscontrol_auth deptAcc on ac.access_control_id=deptAcc.access_control_id
        inner JOIN cbb_userauth.sys_user_dept userDept on userDept.DEPTID=deptAcc.dept_id
        inner JOIN cbb_userauth.sys_user user on user.USERNAME=userDept.USERNAME
        <where>
            user.USERNAME=#{userName}
        </where>
    </select>


    <select id="loginAccessControlInfoExport" resultMap="BaseResultMap">
        select
        ac.access_control_id, ac.access_control_name, ac.lock_id, ac.lock_code, ac.entry_camera_id,
        ac.entry_camera_ip, ac.exit_camera_id, ac.exit_camera_ip, ac.status, ac.createby,
        DATE_FORMAT(ac.createtime,'%Y-%m-%d %H:%i:%s')as createtime,
        DATE_FORMAT(ac.updatetime,'%Y-%m-%d %H:%i:%s')as updatetime ,
        ac.longitude, ac.latitude
        from
        access_control ac
        <where>
            <if test="accessControlInfo.accessControlName != null">
                and ac.access_control_name like concat('%', #{accessControlInfo.accessControlName}, '%')
            </if>
            <if test="accessControlInfo.lockId != null">
                and ac.lock_id = #{accessControlInfo.lockId}
            </if>
            <if test="accessControlInfo.lockCode != null">
                and ac.lock_code like concat('%', #{accessControlInfo.lockCode}, '%')
            </if>
        </where>
        LIMIT 0,2
    </select>


    <insert id="insertAccessControlInfos"  parameterType="java.util.List">

        INSERT INTO access_control (
        <trim suffix="" suffixOverrides=",">
            access_control_id ,
            access_control_name ,
            lock_id ,
            lock_code ,
            entry_camera_id,
            entry_camera_ip,
            exit_camera_id,
            exit_camera_ip,
            status,
            createby,
            createtime,
            updatetime,
            longitude,
            latitude
        </trim>
        ) VALUES
        <foreach collection="accessControlInfos" item="item" index="index" separator=",">
            (
            #{item.accessControlId} ,
            #{item.accessControlName} ,
            #{item.lockId} ,
            #{item.lockCode} ,
            #{item.entryCameraId},
            #{item.entryCameraIp},
            #{item.exitCameraId},
            #{item.exitCameraIp},
            #{item.status},
            #{item.createby},
            #{item.createtime},
            #{item.updatetime},
            #{item.longitude},
            #{item.latitude}
            )
        </foreach>
    </insert>



    <select id="selectHaveHistoryByPage" resultMap="BaseResultMap">
        select
        <include refid="AccCtrl_Have_Alias_List"/>,
        <include refid="Auth_Have_Alias_List"/>
        from
        (select distinct
        <include refid="AccCtrl_Have_Alias_List"/>
        from access_control ac
        inner join acc_ctrl_process acp on acp.access_control_id = ac.access_control_id
        <if test="roles != null">
            inner join (
            select
            <include refid="Auth_No_Alias_List"/>
            from role_accesscontrol_auth au
            <where>
                au.role_id in
                <foreach item="role" collection="roles" index="index" open="(" separator="," close=")">
                    #{role}
                </foreach>
            </where>
            ) au on ac.access_control_id = au.access_control_id
        </if>

        <if test="page != null and page.current != null and  page.pageSize != null ">
            limit #{page.current},#{page.pageSize}
        </if>
        ) ac
        left join role_accesscontrol_auth au on ac.access_control_id = au.access_control_id

    </select>

    <select id="selectHaveHistoryCountByPage" resultType="java.lang.Integer">
        select count(distinct ac.access_control_id) from access_control ac
        inner join acc_ctrl_process acp on acp.access_control_id = ac.access_control_id
        <if test="roles != null">
            inner join (
            select distinct
            <include refid="Auth_No_Alias_List"/>
            from role_accesscontrol_auth au
            <where>
                au.role_id in
                <foreach item="role" collection="roles" index="index" open="(" separator="," close=")">
                    #{role}
                </foreach>
            </where>
            ) au on ac.access_control_id = au.access_control_id
        </if>

        <if test="page != null and page.current != null and  page.pageSize != null ">
            limit #{page.current},#{page.pageSize}
        </if>

    </select>


    <select id="selectCondition" parameterType="com.summit.dao.entity.AccessControlInfo" resultMap="BaseResultMap">
        select
        <include refid="AccCtrl_Have_Alias_List"/>
        from
        access_control ac
        <where>
            <if test="roles != null">
                ac.access_control_id IN ( SELECT DISTINCT au.access_control_id FROM role_accesscontrol_auth au WHERE au.role_id IN
                <foreach item="role" collection="roles" index="index" open="(" separator="," close=")">
                    #{role}
                </foreach>
                )
            </if>
            <if test="accessControlInfo.accessControlId != null">
                and ac.access_control_id = #{accessControlInfo.accessControlId}
            </if>
            <if test="accessControlInfo.accessControlName != null">
                and ac.access_control_name like concat('%', #{accessControlInfo.accessControlName}, '%')
            </if>
            <if test="accessControlInfo.lockId != null">
                and ac.lock_id = #{accessControlInfo.lockId}
            </if>
            <if test="accessControlInfo.lockCode != null">
                and ac.lock_code like concat('%', #{accessControlInfo.lockCode}, '%')
            </if>
            <if test="accessControlInfo.entryCameraIp != null">
                and ac.entry_camera_ip like concat('%', #{accessControlInfo.entryCameraIp}, '%')
            </if>
            <if test="accessControlInfo.exitCameraIp != null">
                and ac.exit_camera_ip like concat('%', #{accessControlInfo.exitCameraIp}, '%')
            </if>
            <if test="accessControlInfo.status != null">
                and ac.status = #{accessControlInfo.status}
            </if>
            <if test="accessControlInfo.createby != null">
                and ac.createby like concat('%', #{accessControlInfo.createby}, '%')
            </if>
            <if test="accessControlInfo.createtime != null">
                and ac.createtime = #{accessControlInfo.createtime}
            </if>
            <if test="accessControlInfo.updatetime != null">
                and ac.updatetime = #{accessControlInfo.updatetime}
            </if>
        </where>
        order by ac.updatetime desc
    </select>

</mapper>